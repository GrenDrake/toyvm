.export start

some_bytes:
    .byte 1 2 3 4
    .zero 20
a_short:
    .short 256
a_word:
    .word 1000000
hello_msg:
    .string "\"Hello world\"!\n"
    .string "test me"
input_buf:
    .zero 32
    .define max_input 30
prompt_str:
    .string "\n> "
after_str:
    .string "You typed: ~"

    .include "glk.a"

start:
    pushw    hello_msg
    saystr

    pushb    10
loop:
    stkdup
    saynum
    pushb    32
    saychar
    dec
    stkdup
    pushw    loop
    jnz
    pushb    '\n'
    saychar

    pushw    some_bytes
    readb
    saynum
    pushb    '\n'
    saychar
    pushw    a_short
    reads
    saynum
    pushb    '\n'
    saychar
    pushw    a_word
    readw
    saynum
    pushb    '\n'
    saychar

    pushw    prompt_str
    saystr
    pushb    max_input
    pushw    input_buf
    gets
    pushw    after_str
    saystr
    pushw    input_buf
    inc
    saystr
    pushb    '~'
    saychar
    pushb    '\n'
    saychar

    exit
